server:
  port: 8000

spring:
  cloud:
    gateway:
      httpclient:
        connect-timeout: 50000
        response-timeout: 50000

        default-filters:
          - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
        globalcors:
          cors-configurations:
            '[/**]':
              allowedOrigins:
                - 'http://localhost:3000'
                - 'https://gentledog.store'
              allow-credentials: true
              allowedHeaders: '*'
              allowedMethods:
                - PUT
                - GET
                - POST
                - DELETE
                - PATCH
                - OPTIONS

      # gateway로 통신할 service들을 정의
      routes:
        #          # ex) user-service -> set other service server name.
        #        - id:
        #          # ex) lb://USER-SERVICE -> access for instance name. it must same application name to uploaded eureka.
        #          uri:
        #          # ex) - Path=/api/v1/user/** -> set server's controller url
        #          predicates:
        #

        # 장바구니 & 찜 서비스
        - id: wish
          uri: lb://WISH
          predicates:
            - Path=/api/v1/wish/**
            - Method=GET, POST, DELETE, PUT

        # 정산 서비스
        - id: settlement
          uri: lb://SETTLEMENT
          predicates:
            - Path=/api/v1/settlement/**
            - Method=GET, POST

        - id: settlement
          uri: lb://SETTLEMENT
          predicates:
            - Path=/api/v1/settlement/daily/**
            - Method=GET, POST

        # 주문 서비스 -> 결제관련
        - id: orders
          uri: lb://ORDERS
          predicates:
            - Path=/api/v1/orders/**
            - Method=GET, POST

        - id: orders
          uri: lb://ORDERS
          predicates:
            - Path=/api/v1/orders/payment/**
            - Method=GET, POST

        # 유저 회원가입
        - id: user
          uri: lb://USER
          predicates:
            - Path=/api/v1/user/signup/**
            - Method=GET, POST

        # 유저 로그인
        - id: user
          uri: lb://USER
          predicates:
            - Path=/api/v1/user/signin/**
            - Method=GET, POST

        # 유저 정보 조회, 수정
        - id: user
          uri: lb://USER
          predicates:
            - Path=/api/v1/user/info
            - Method=GET, PUT
          filters:
            - AuthorizationUserHeaderFilter

        # 유저 이메일 찾기
        - id: user
          uri: lb://USER
          predicates:
            - Path=/api/v1/user/email
            - Method=GET

        # 유저 비밀번호 수정
        - id: user
          uri: lb://USER
          predicates:
            - Path=/api/v1/user/password
            - Method=PUT
          filters:
            - AuthorizationUserHeaderFilter

        # 유저 탈퇴
        - id: user
          uri: lb://USER
          predicates:
            - Path=/api/v1/user/withdraw
            - Method=PUT
          filters:
            - AuthorizationUserHeaderFilter

        # 유저 로그아웃
        - id: user
          uri: lb://USER
          predicates:
            - Path=/api/v1/user/signout
            - Method=POST
          filters:
            - AuthorizationUserHeaderFilter

        # 유저 토큰 재발급
        - id: user
          uri: lb://USER
          predicates:
            - Path=/api/v1/user/refresh
            - Method=POST

        # 유저 강아지
        - id: user
          uri: lb://USER
          predicates:
            - Path=/api/v1/user/dog
            - Method=POST, GET, PUT, DELETE
          filters:
            - AuthorizationUserHeaderFilter

        # 유저 회원 가입 시 강아지 등록
        - id: user
          uri: lb://USER
          predicates:
            - Path=/api/v1/user/dog/signup
            - Method=POST

        # 유저 대표 강아지 수정
        - id: user
          uri: lb://USER
          predicates:
            - Path=/api/v1/user/dog/default
            - Method=PUT
          filters:
            - AuthorizationUserHeaderFilter

        # 유저 강아지 품종 조회
        - id: user
          uri: lb://USER
          predicates:
            - Path=/api/v1/user/dog/breeds
            - Method=GET

        # 유저 배송지
        - id: user
          uri: lb://USER
          predicates:
            - Path=/api/v1/user/address
            - Method=POST, GET, PUT, DELETE
          filters:
            - AuthorizationUserHeaderFilter

        # 유저 대표 배송지
        - id: user
          uri: lb://USER
          predicates:
            - Path=/api/v1/user/address/default
            - Method=POST, GET, PUT, DELETE
          filters:
            - AuthorizationUserHeaderFilter

        #판매자 회원가입
        - id: vendor-service
          uri: lb://VENDOR-SERVICE
          predicates:
            - Path=/api/v1/vendor/signup
            - Method=POST

        #판매자 로그인
        - id: vendor-service
          uri: lb://VENDOR-SERVICE
          predicates:
            - Path=/api/v1/vendor/signin
            - Method=POST

        # 판매자 이메일 중복체크
        - id: vendor-service
          uri: lb://VENDOR-SERVICE
          predicates:
            - Path=/api/v1/vendor/check-email
            - Method=POST

        # 인증 메일 발송
        - id: vendor-service
          uri: lb://VENDOR-SERVICE
          predicates:
            - Path=/api/v1/vendor/email-auth
            - Method=POST

        # 인증코드 확인
        - id: vendor-service
          uri: lb://VENDOR-SERVICE
          predicates:
            - Path=/api/v1/vendor/email-verify
            - Method=POST
            
        # 아이디 찾기
        - id: vendor-service
          uri: lb://VENDOR-SERVICE
          predicates:
            - Path=/api/v1/vendor/find-email
            - Method=POST

        # 회원 탈퇴
        - id: vendor-service
          uri: lb://VENDOR-SERVICE
          predicates:
            - Path=/api/v1/vendor/withdrawal
            - Method=POST
          filters:
            - AuthorizationVendorHeaderFilter

        # 비밀번호 변경
        - id: vendor-service
          uri: lb://VENDOR-SERVICE
          predicates:
            - Path=/api/v1/vendor/change-password
            - Method=POST
          filters:
            - AuthorizationVendorHeaderFilter

        # 판매자 정보 조회
        - id: vendor-service
          uri: lb://VENDOR-SERVICE
          predicates:
            - Path=/api/v1/vendor/info
            - Method=GET
          filters:
            - AuthorizationVendorHeaderFilter

        #판매자 정보 수정
        - id: vendor-service
          uri: lb://VENDOR-SERVICE
          predicates:
            - Path=/api/v1/vendor/change-info
            - Method=POST
          filters:
            - AuthorizationVendorHeaderFilter

        ###### 상품 서버 ######
        # 관리자 사이즈 등록
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/product/create-size
            - Method=POST
        #          filters:
        #            - AuthorizationAdminHeaderFilter

        # 관리자 색상 등록
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/product/create-color
            - Method=POST
      #          filters:
      #            - AuthorizationAdminHeaderFilter

        #관리자 대분류 카테고리 등록
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/product/create-parent-category
            - Method=POST
#          filters:
#            - AuthorizationAdminHeaderFilter

        #관 리자 중분류 카테고리 등록
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/product/create-child-category
            - Method=POST

        # 사이즈 전체 옵션 조회
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/product/read-all-size
            - Method=GET

        # 색상 전체 옵션 조회
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/product/read-colors
            - Method=GET

        # 카테고리 대분류 조회
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/product/read-parent-category
            - Method=GET

        # 상품 등록
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/product/product-create
            - Method=POST
          filters:
            - AuthorizationVendorHeaderFilter

        # 하위 카테고리 조회
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/product/read-child-category
            - Method=GET

        # 하위 카테고리별 상품 개수 조회
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/product/read-child-category-count
            - Method=GET

        # 상품 재고 정보 변경
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/vendor-product/inventory
            - Method=POST
          filters:
            - AuthorizationVendorHeaderFilter

        #재고 상품 조회
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/vendor-product/vendor-products
            - Method=GET
          filters:
            - AuthorizationVendorHeaderFilter

        #상품 삭제
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/vendor-product/vendor-products/*
            - Method=DELETE
          filters:
            - AuthorizationVendorHeaderFilter

        #재고조회 (장바구니 페이지)
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/vendor-product/sales-count/*
            - Method=GET

        # 상품 조회
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/product/product-find
            - Method=GET

        # 상품 세부 조회 (장바구니)
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/product/find-product-detail
            - Method=POST

        # 상품 세부 조회 (주문)
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/product/order-product-info
            - Method=POST

        # 상품 세부 조회
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/product/product-detail-page
            - Method=GET
            
        ###### 리뷰 서버 ######
        # 리뷰 등록
        - id: review-service
          uri: lb://REVIEW-SERVICE
          predicates:
            - Path=/api/v1/review/create-review
            - Method=POST
#          filters:
#            - AuthorizationUserHeaderFilter

token:
  secret: ${JWT_SECRET_KEY}


eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_URL}